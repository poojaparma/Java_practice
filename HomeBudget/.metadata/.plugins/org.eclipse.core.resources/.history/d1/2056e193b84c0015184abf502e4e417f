<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">
 
<!-- Enable AspectJ style of Spring AOP -->
<aop:aspectj-autoproxy />
 
<!-- Configure Employee Bean and initialize it -->
<bean name="employee" class="com.journaldev.spring.model.Employee">
    <property name="name" value="Dummy Name"></property>
</bean>
 
<!-- Configure EmployeeService bean -->
<bean name="employeeService" class="com.journaldev.spring.service.EmployeeService">
    <property name="employee" ref="employee"></property>
</bean>
 
<!-- Configure Aspect Beans, without this Aspects advices wont execute -->
<bean name="employeeAspect" class="com.aspect.jointpoint.advice.EmployeeAspect" />
<!-- <bean name="employeeAspectPointcut" class="com.journaldev.spring.aspect.EmployeeAspectPointcut" />
<bean name="employeeAspectJoinPoint" class="com.journaldev.spring.aspect.EmployeeAspectJoinPoint" />
<bean name="employeeAfterAspect" class="com.journaldev.spring.aspect.EmployeeAfterAspect" />
<bean name="employeeAroundAspect" class="com.journaldev.spring.aspect.EmployeeAroundAspect" />
<bean name="employeeAnnotationAspect" class="com.journaldev.spring.aspect.EmployeeAnnotationAspect" /> -->
 
</beans>
<!-- <?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN 2.0//EN"
        "http://www.springframework.org/dtd/spring-beans-2.0.dtd">

<beans>
inheritnce beans,initializing bean have method to control life cycle of bean
init method can be mentioned ........in xml
	bean definitions here
	<bean id="triangle" class="com.spring.examples.Triangle">
		<property name="type" value="Equilateral"/>
		<property name="pointA"  >
	 <bean class="com.spring.examples.Point">
		<property name="x" value="100" />
		<property name="y" value="200" />
	</bean>
		</property>
		 <property name="pointB" ref="one"/>
		 <property name="pointC" ref="two"/> 
		 <construct0"/> <constructor-arg index ="0" 
			value="10"/> <property name="pointC" ref="two"/>
	</bean>
	<bean id="zero" class="com.spring.examples.Point">
		<property name="x" value="0" />
		<property name="y" value="2" />
	</bean>

	 <bean id="one" class="com.spring.examples.Point">
		<property name="x" value="100" />
		<property name="y" value="200" />
	</bean>
	 <bean id="two" class="com.spring.examples.Point">
		<property name="x" value="10" />
		<property name="y" value="20" />
	</bean>
	<bean id="two" class="com.spring.examples.Point">
		<property name="x" value="300" />
		<property name="y" value="400 />
	</bean>
</beans> -->